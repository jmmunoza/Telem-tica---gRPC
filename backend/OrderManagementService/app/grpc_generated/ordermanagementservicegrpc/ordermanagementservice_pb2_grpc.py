# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app.grpc_generated.ordermanagementservicegrpc.ordermanagementservice_pb2 as ordermanagementservice__pb2


class OrderManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getAll = channel.unary_stream(
                '/OrderManagementService/getAll',
                request_serializer=ordermanagementservice__pb2.GetAllOrdersRequest.SerializeToString,
                response_deserializer=ordermanagementservice__pb2.Order.FromString,
                )
        self.get = channel.unary_unary(
                '/OrderManagementService/get',
                request_serializer=ordermanagementservice__pb2.OrderRequest.SerializeToString,
                response_deserializer=ordermanagementservice__pb2.Order.FromString,
                )
        self.create = channel.unary_unary(
                '/OrderManagementService/create',
                request_serializer=ordermanagementservice__pb2.CreateOrderRequest.SerializeToString,
                response_deserializer=ordermanagementservice__pb2.Order.FromString,
                )
        self.cancel = channel.unary_unary(
                '/OrderManagementService/cancel',
                request_serializer=ordermanagementservice__pb2.OrderRequest.SerializeToString,
                response_deserializer=ordermanagementservice__pb2.OrderResponse.FromString,
                )
        self.complete = channel.unary_unary(
                '/OrderManagementService/complete',
                request_serializer=ordermanagementservice__pb2.OrderRequest.SerializeToString,
                response_deserializer=ordermanagementservice__pb2.OrderResponse.FromString,
                )


class OrderManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def complete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getAll': grpc.unary_stream_rpc_method_handler(
                    servicer.getAll,
                    request_deserializer=ordermanagementservice__pb2.GetAllOrdersRequest.FromString,
                    response_serializer=ordermanagementservice__pb2.Order.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=ordermanagementservice__pb2.OrderRequest.FromString,
                    response_serializer=ordermanagementservice__pb2.Order.SerializeToString,
            ),
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=ordermanagementservice__pb2.CreateOrderRequest.FromString,
                    response_serializer=ordermanagementservice__pb2.Order.SerializeToString,
            ),
            'cancel': grpc.unary_unary_rpc_method_handler(
                    servicer.cancel,
                    request_deserializer=ordermanagementservice__pb2.OrderRequest.FromString,
                    response_serializer=ordermanagementservice__pb2.OrderResponse.SerializeToString,
            ),
            'complete': grpc.unary_unary_rpc_method_handler(
                    servicer.complete,
                    request_deserializer=ordermanagementservice__pb2.OrderRequest.FromString,
                    response_serializer=ordermanagementservice__pb2.OrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OrderManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/OrderManagementService/getAll',
            ordermanagementservice__pb2.GetAllOrdersRequest.SerializeToString,
            ordermanagementservice__pb2.Order.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderManagementService/get',
            ordermanagementservice__pb2.OrderRequest.SerializeToString,
            ordermanagementservice__pb2.Order.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderManagementService/create',
            ordermanagementservice__pb2.CreateOrderRequest.SerializeToString,
            ordermanagementservice__pb2.Order.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cancel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderManagementService/cancel',
            ordermanagementservice__pb2.OrderRequest.SerializeToString,
            ordermanagementservice__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def complete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderManagementService/complete',
            ordermanagementservice__pb2.OrderRequest.SerializeToString,
            ordermanagementservice__pb2.OrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
